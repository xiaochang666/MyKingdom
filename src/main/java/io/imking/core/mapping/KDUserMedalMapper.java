package io.imking.core.mapping;

import io.imking.core.domain.KDUserMedal;
import org.apache.ibatis.annotations.*;
import org.apache.ibatis.type.JdbcType;

import java.util.List;

public interface KDUserMedalMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table kd_user_medal
     *
     * @mbg.generated
     */
    @Delete({
        "delete from kd_user_medal",
        "where id = #{id,jdbcType=BIGINT}"
    })
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table kd_user_medal
     *
     * @mbg.generated
     */
    @Insert({
        "insert into kd_user_medal (id, userid, ",
        "medalId, bindUserid, ",
        "remark, createTime)",
        "values (#{id,jdbcType=BIGINT}, #{userid,jdbcType=BIGINT}, ",
        "#{medalid,jdbcType=BIGINT}, #{binduserid,jdbcType=BIGINT}, ",
        "#{remark,jdbcType=VARCHAR}, #{createtime,jdbcType=TIMESTAMP})"
    })
    int insert(KDUserMedal record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table kd_user_medal
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "id, userid, medalId, bindUserid, remark, createTime",
        "from kd_user_medal",
        "where id = #{id,jdbcType=BIGINT}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="userid", property="userid", jdbcType=JdbcType.BIGINT),
        @Result(column="medalId", property="medalid", jdbcType=JdbcType.BIGINT),
        @Result(column="bindUserid", property="binduserid", jdbcType=JdbcType.BIGINT),
        @Result(column="remark", property="remark", jdbcType=JdbcType.VARCHAR),
        @Result(column="createTime", property="createtime", jdbcType=JdbcType.TIMESTAMP)
    })
    KDUserMedal selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table kd_user_medal
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "id, userid, medalId, bindUserid, remark, createTime",
        "from kd_user_medal"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="userid", property="userid", jdbcType=JdbcType.BIGINT),
        @Result(column="medalId", property="medalid", jdbcType=JdbcType.BIGINT),
        @Result(column="bindUserid", property="binduserid", jdbcType=JdbcType.BIGINT),
        @Result(column="remark", property="remark", jdbcType=JdbcType.VARCHAR),
        @Result(column="createTime", property="createtime", jdbcType=JdbcType.TIMESTAMP)
    })
    List<KDUserMedal> selectAll();

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table kd_user_medal
     *
     * @mbg.generated
     */
    @Update({
        "update kd_user_medal",
        "set userid = #{userid,jdbcType=BIGINT},",
          "medalId = #{medalid,jdbcType=BIGINT},",
          "bindUserid = #{binduserid,jdbcType=BIGINT},",
          "remark = #{remark,jdbcType=VARCHAR},",
          "createTime = #{createtime,jdbcType=TIMESTAMP}",
        "where id = #{id,jdbcType=BIGINT}"
    })
    int updateByPrimaryKey(KDUserMedal record);



    @Select({
            "select",
            "id, userid, medalId, bindUserid, remark, createTime",
            "from kd_user_medal",
            "where userid = #{id,jdbcType=BIGINT}"
    })
    @Results({
            @Result(column="id", property="id", jdbcType=JdbcType.BIGINT, id=true),
            @Result(column="userid", property="userid", jdbcType=JdbcType.BIGINT),
            @Result(column="medalId", property="medalid", jdbcType=JdbcType.BIGINT),
            @Result(column="bindUserid", property="binduserid", jdbcType=JdbcType.BIGINT),
            @Result(column="remark", property="remark", jdbcType=JdbcType.VARCHAR),
            @Result(column="createTime", property="createtime", jdbcType=JdbcType.TIMESTAMP)
    })
    List<KDUserMedal> selectMedalIdByUserId(Long id);
}