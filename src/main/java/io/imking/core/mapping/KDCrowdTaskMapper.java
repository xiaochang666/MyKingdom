package io.imking.core.mapping;

import io.imking.core.domain.KDCrowdTask;
import org.apache.ibatis.annotations.*;
import org.apache.ibatis.type.JdbcType;

import java.util.List;

public interface KDCrowdTaskMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table kd_crowd_task
     *
     * @mbg.generated
     */
    @Delete({
        "delete from kd_crowd_task",
        "where id = #{id,jdbcType=BIGINT}"
    })
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table kd_crowd_task
     *
     * @mbg.generated
     */
    @Insert({
        "insert into kd_crowd_task (id, userId, ",
        "operatorId, title, ",
        "reward, taskType, ",
        "tagType, avatar, ",
        "content, createTime, ",
        "status, explain)",
        "values (#{id,jdbcType=BIGINT}, #{userid,jdbcType=BIGINT}, ",
        "#{operatorid,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, ",
        "#{reward,jdbcType=BIGINT}, #{tasktype,jdbcType=TINYINT}, ",
        "#{tagtype,jdbcType=INTEGER}, #{avatar,jdbcType=VARCHAR}, ",
        "#{content,jdbcType=VARCHAR}, #{createtime,jdbcType=TIMESTAMP}, ",
        "#{status,jdbcType=TINYINT}, #{explain,jdbcType=VARCHAR})"
    })
    int insert(KDCrowdTask record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table kd_crowd_task
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "id, userId, operatorId, title, reward, taskType, tagType, avatar, content, createTime, ",
        "status, explain",
        "from kd_crowd_task",
        "where id = #{id,jdbcType=BIGINT}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="userId", property="userid", jdbcType=JdbcType.BIGINT),
        @Result(column="operatorId", property="operatorid", jdbcType=JdbcType.INTEGER),
        @Result(column="title", property="title", jdbcType=JdbcType.VARCHAR),
        @Result(column="reward", property="reward", jdbcType=JdbcType.BIGINT),
        @Result(column="taskType", property="tasktype", jdbcType=JdbcType.TINYINT),
        @Result(column="tagType", property="tagtype", jdbcType=JdbcType.INTEGER),
        @Result(column="avatar", property="avatar", jdbcType=JdbcType.VARCHAR),
        @Result(column="content", property="content", jdbcType=JdbcType.VARCHAR),
        @Result(column="createTime", property="createtime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="status", property="status", jdbcType=JdbcType.TINYINT),
        @Result(column="explain", property="explain", jdbcType=JdbcType.VARCHAR)
    })
    KDCrowdTask selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table kd_crowd_task
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "id, userId, operatorId, title, reward, taskType, tagType, avatar, content, createTime, ",
        "status, explain",
        "from kd_crowd_task"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="userId", property="userid", jdbcType=JdbcType.BIGINT),
        @Result(column="operatorId", property="operatorid", jdbcType=JdbcType.INTEGER),
        @Result(column="title", property="title", jdbcType=JdbcType.VARCHAR),
        @Result(column="reward", property="reward", jdbcType=JdbcType.BIGINT),
        @Result(column="taskType", property="tasktype", jdbcType=JdbcType.TINYINT),
        @Result(column="tagType", property="tagtype", jdbcType=JdbcType.INTEGER),
        @Result(column="avatar", property="avatar", jdbcType=JdbcType.VARCHAR),
        @Result(column="content", property="content", jdbcType=JdbcType.VARCHAR),
        @Result(column="createTime", property="createtime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="status", property="status", jdbcType=JdbcType.TINYINT),
        @Result(column="explain", property="explain", jdbcType=JdbcType.VARCHAR)
    })
    List<KDCrowdTask> selectAll();

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table kd_crowd_task
     *
     * @mbg.generated
     */
    @Update({
        "update kd_crowd_task",
        "set userId = #{userid,jdbcType=BIGINT},",
          "operatorId = #{operatorid,jdbcType=INTEGER},",
          "title = #{title,jdbcType=VARCHAR},",
          "reward = #{reward,jdbcType=BIGINT},",
          "taskType = #{tasktype,jdbcType=TINYINT},",
          "tagType = #{tagtype,jdbcType=INTEGER},",
          "avatar = #{avatar,jdbcType=VARCHAR},",
          "content = #{content,jdbcType=VARCHAR},",
          "createTime = #{createtime,jdbcType=TIMESTAMP},",
          "status = #{status,jdbcType=TINYINT},",
          "explain = #{explain,jdbcType=VARCHAR}",
        "where id = #{id,jdbcType=BIGINT}"
    })
    int updateByPrimaryKey(KDCrowdTask record);
}